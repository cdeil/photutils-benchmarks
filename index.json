{
    "benchmarks": {
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.CircularAperturePhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAnnulusPhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_mult_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_bg_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_err_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_01", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05": {
            "code": "setattr(cls, method_name, lambda self, par=parameters: cls.do_test(**par))\n", 
            "goal_time": 2.0, 
            "name": "aperture.EllipticalAperturePhotometry.time_sing_sm_ap_subpixel_05", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 120.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_exact": {
            "code": "def time_circular_big_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_subpixel_1": {
            "code": "def time_circular_big_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_big_subpixel_5": {
            "code": "def time_circular_big_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 100, 100, 3.,\n                          use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_big_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_exact": {
            "code": "def time_circular_small_exact():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_subpixel_1": {
            "code": "def time_circular_small_subpixel_1():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_circular_small_subpixel_5": {
            "code": "def time_circular_small_subpixel_5():\n    circular_overlap_grid(-4., 4., -4., 4., 10, 10, 3.,\n                          use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_circular_small_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_exact": {
            "code": "def time_elliptical_big_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_subpixel_1": {
            "code": "def time_elliptical_big_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_big_subpixel_5": {
            "code": "def time_elliptical_big_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 100, 100, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_big_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_exact": {
            "code": "def time_elliptical_small_exact():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_exact", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_subpixel_1": {
            "code": "def time_elliptical_small_subpixel_1():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=0, subpixels=1)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_subpixel_1", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "geometry.time_elliptical_small_subpixel_5": {
            "code": "def time_elliptical_small_subpixel_5():\n    elliptical_overlap_grid(-4., 4., -4., 4., 10, 10, 3., 2., 1.,\n                            use_exact=1, subpixels=5)\n", 
            "goal_time": 2.0, 
            "name": "geometry.time_elliptical_small_subpixel_5", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }
    }, 
    "date_to_hash": {
        "1408645022000": "21010e8a", 
        "1408704692000": "d032c703", 
        "1409102386000": "201f0468", 
        "1409133713000": "8ddff20f", 
        "1409318750000": "1bf7a544", 
        "1409318895000": "d7dbb4c6", 
        "1409356530000": "e2972eb3", 
        "1409629070000": "e68f2c20", 
        "1409669856000": "c3e41c66", 
        "1409669873000": "febb0d21", 
        "1409671064000": "d3b657e7", 
        "1409692366000": "d328253f", 
        "1409842968000": "52b4d68f", 
        "1409851078000": "45d90e0e", 
        "1409854139000": "633f0bba", 
        "1409855475000": "64159074", 
        "1409864031000": "b091e0ff", 
        "1409930320000": "29d3bc82", 
        "1409960836000": "19a564f0", 
        "1409960882000": "b75c4a19", 
        "1410471165000": "ab5e3c3a", 
        "1410541006000": "7810d6d7", 
        "1410763676000": "1ffdec21", 
        "1410766485000": "042ec7ce", 
        "1410778405000": "9166e164", 
        "1410791979000": "bd9d416f", 
        "1410891650000": "56218b04", 
        "1410921665000": "0645befe", 
        "1410953690000": "1facd50f", 
        "1410953745000": "8840e72e", 
        "1410956732000": "f01c3531", 
        "1411399495000": "a432c9f2", 
        "1411415471000": "66c58bdc", 
        "1411573512000": "16d242d9", 
        "1411741941000": "d03b4035", 
        "1412089214000": "55e57dd6", 
        "1412098605000": "89b8d43b", 
        "1412099467000": "f680691a", 
        "1412101162000": "de29294f", 
        "1412102710000": "a9081985", 
        "1412105558000": "3ef8cef2", 
        "1412106268000": "17542cf9", 
        "1412106692000": "9ee13544", 
        "1412109033000": "6a4d8b8f", 
        "1412110453000": "b861fd88", 
        "1412132931000": "31068918", 
        "1412134492000": "931fdca8", 
        "1412136562000": "1fbddafc", 
        "1412136580000": "5d6447df", 
        "1412184021000": "dd58c079", 
        "1412184300000": "23020a8c", 
        "1412187486000": "51f093f7", 
        "1412188005000": "370eec08", 
        "1412189154000": "5722ab65", 
        "1412273713000": "9c1a30b1", 
        "1412274300000": "07b6263f", 
        "1412275526000": "60aca650", 
        "1412275559000": "9aa83258", 
        "1412275602000": "be977746", 
        "1412365580000": "7787eeee", 
        "1412366712000": "f7c1755c", 
        "1412372915000": "b02f6cbe", 
        "1412379971000": "8173e554", 
        "1412620341000": "643201ac", 
        "1412794010000": "9e208ee0", 
        "1412794398000": "3dbdb054", 
        "1412799281000": "d6383870", 
        "1412799556000": "443938b9", 
        "1412808656000": "f9c31ff8", 
        "1412810484000": "a5dac9cb", 
        "1412877978000": "5cd937c6", 
        "1412881005000": "0284c4aa", 
        "1412953836000": "fb1a6606", 
        "1412955444000": "20627314", 
        "1413212822000": "e8017dbe", 
        "1413230623000": "7b893693", 
        "1413231644000": "ef40429d", 
        "1413232700000": "014531e7", 
        "1413304272000": "974b819b", 
        "1413314893000": "0bb986ef", 
        "1413316577000": "570f0ecc", 
        "1413317882000": "345e7a70", 
        "1413550421000": "c5a69ac6", 
        "1413584398000": "cc534b37", 
        "1413924084000": "48181e8c", 
        "1413925302000": "e3e4be06", 
        "1414005345000": "a64dfe44", 
        "1414049762000": "c414eaa0", 
        "1414095789000": "d804caa3", 
        "1414169478000": "ca7bd687", 
        "1414169874000": "fa6ed0ea", 
        "1414173609000": "95fa366f", 
        "1414175431000": "8fbdc819", 
        "1414176085000": "13dab81a", 
        "1414186417000": "0730acbe", 
        "1414230477000": "72f2a57b", 
        "1414424900000": "b458f31a", 
        "1414436002000": "f2404f0c", 
        "1414437571000": "9d91a268", 
        "1414702440000": "3fa935a5", 
        "1414702451000": "5b6338ec", 
        "1414774179000": "927555c0", 
        "1414774673000": "617f6398", 
        "1414775063000": "c802fba3", 
        "1414776686000": "f5f69b8a", 
        "1414777012000": "7e50e256", 
        "1414777507000": "298923d3", 
        "1414782655000": "9fadf4ca", 
        "1414783751000": "fe076c6a", 
        "1414785079000": "67d49e4f", 
        "1414789163000": "99eecfd6", 
        "1415139197000": "5672729e", 
        "1415139265000": "4ccb9f12", 
        "1415143933000": "550604f0", 
        "1415144706000": "ff47d74a", 
        "1415230806000": "832b9037", 
        "1415232689000": "148123ec", 
        "1415235845000": "633bf9ad", 
        "1415730007000": "5be81183", 
        "1415739375000": "47e87e18", 
        "1415739467000": "9dffd3de", 
        "1416346423000": "d7a2754b", 
        "1416595061000": "f56fd0f0", 
        "1416844637000": "a5e0e209", 
        "1417167815000": "865c91a0", 
        "1417169476000": "3cae9cbb", 
        "1417341813000": "038844ee", 
        "1417638732000": "f78c9f20", 
        "1417640215000": "64304ab3", 
        "1417647307000": "d40d457d", 
        "1417731783000": "1c6f4c64", 
        "1418153508000": "65bbe55e", 
        "1418186482000": "2ddf24a6", 
        "1418209168000": "c9d950be", 
        "1418248750000": "721effb7", 
        "1418324168000": "f2db3e96", 
        "1418415941000": "3a0f9c91", 
        "1418418226000": "6823e871"
    }, 
    "machines": {
        "tom-mac-mini": {
            "arch": "x86_64", 
            "cpu": "Intel(R) Core(TM) i5-2415M CPU @ 2.30GHz", 
            "machine": "tom-mac-mini", 
            "os": "MacOS X 10.8", 
            "ram": 8589934592, 
            "version": 1
        }
    }, 
    "params": {
        "Cython": [
            null
        ], 
        "arch": [
            "x86_64"
        ], 
        "astropy": [
            "0.4.1"
        ], 
        "cpu": [
            "Intel(R) Core(TM) i5-2415M CPU @ 2.30GHz"
        ], 
        "machine": [
            "tom-mac-mini"
        ], 
        "numpy": [
            "1.8"
        ], 
        "os": [
            "MacOS X 10.8"
        ], 
        "python": [
            "2.7"
        ], 
        "ram": [
            8589934592
        ]
    }, 
    "project": "photutils", 
    "project_url": "http://photutils.readthedocs.org", 
    "show_commit_url": "http://github.com/astropy/photutils/commit/", 
    "tags": {}
}